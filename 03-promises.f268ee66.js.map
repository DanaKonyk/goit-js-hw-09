{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAiCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAS,SAACC,EAASC,GAC5B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEtBA,E,IAzCQQ,SAASC,cAAc,SAE/BC,iBAAiB,UAGtB,SAAsBC,GAClBA,EAAIC,iBAMN,IAJA,IAAMC,EAAQC,SAASH,EAAII,cAAcC,SAAShB,MAAMiB,OAClDC,EAAOJ,SAASH,EAAII,cAAcC,SAASE,KAAKD,OAChDE,EAASL,SAASH,EAAII,cAAcC,SAASG,OAAOF,OAEjDG,EAAI,EAAGA,EAAID,EAAQC,GAAG,EAAG,CAMlCtB,EAJmBsB,EAAI,EACNP,EAAQK,EAAOE,GAI/BC,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAChBuB,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAExE2B,OAAM,SAAAL,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBuB,EAAA3B,GAAS4B,OAAOI,QAAQ,sBAAqCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAItEW,EAAII,cAAcc,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst form = document.querySelector(\".form\");\n\nform.addEventListener('submit', onFormSubmit);\n\n\nfunction onFormSubmit(evt) {\n    evt.preventDefault();\n  \n  const delay = parseInt(evt.currentTarget.elements.delay.value);\n  const step = parseInt(evt.currentTarget.elements.step.value);\n  const amount = parseInt(evt.currentTarget.elements.amount.value);\n\n  for (let i = 0; i < amount; i+=1) {\n\n    const position = i + 1;\n    const delays = delay + step * i;\n\n\n  createPromise(position, delays)\n  .then(({ position, delay }) => {\n     Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n     Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  }\n  \n  evt.currentTarget.reset();\n}\n\n\nfunction createPromise(position, delay) {\n  return new Promise ((resolve, reject) => { \n    const shouldResolve = Math.random() > 0.3;\n    \n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n  } else {\n        reject({ position, delay });\n  }\n  }, delay);\n\n});\n\n};\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","evt","preventDefault","delay1","parseInt","currentTarget","elements","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.f268ee66.js.map"}