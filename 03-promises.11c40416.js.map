{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAiCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAS,CAACC,EAASC,KAC5B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE9BA,EAAM,G,CAzCEQ,SAASC,cAAc,SAE/BC,iBAAiB,UAGtB,SAAsBC,GAClBA,EAAIC,iBAEN,MAAMC,EAAQC,SAASH,EAAII,cAAcC,SAAShB,MAAMiB,OAClDC,EAAOJ,SAASH,EAAII,cAAcC,SAASE,KAAKD,OAChDE,EAASL,SAASH,EAAII,cAAcC,SAASG,OAAOF,OAE1D,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,GAAG,EAAG,CAMlCtB,EAJmBsB,EAAI,EACNP,EAAQK,EAAOE,GAI/BC,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MAChBsB,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAqBzB,QAAiBC,MAAU,IAE1EyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MACjBsB,EAAA1B,GAAS2B,OAAOG,QAAQ,sBAAoB3B,QAAeC,MAAU,G,CAIxEW,EAAII,cAAcY,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst form = document.querySelector(\".form\");\n\nform.addEventListener('submit', onFormSubmit);\n\n\nfunction onFormSubmit(evt) {\n    evt.preventDefault();\n  \n  const delay = parseInt(evt.currentTarget.elements.delay.value);\n  const step = parseInt(evt.currentTarget.elements.step.value);\n  const amount = parseInt(evt.currentTarget.elements.amount.value);\n\n  for (let i = 0; i < amount; i+=1) {\n\n    const position = i + 1;\n    const delays = delay + step * i;\n\n\n  createPromise(position, delays)\n  .then(({ position, delay }) => {\n     Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n     Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  }\n  \n  evt.currentTarget.reset();\n}\n\n\nfunction createPromise(position, delay) {\n  return new Promise ((resolve, reject) => { \n    const shouldResolve = Math.random() > 0.3;\n    \n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n  } else {\n        reject({ position, delay });\n  }\n  }, delay);\n\n});\n\n};\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","evt","preventDefault","delay1","parseInt","currentTarget","elements","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.11c40416.js.map"}